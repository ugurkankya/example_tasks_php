version: "2"

services:
  shell:
    image: example_php
    cap_drop: [all]
    working_dir: /var/www/app/shell
    entrypoint: php
    volumes:
      - ./:/var/www
    networks:
      - backend
    links:
      - mysql
      - memcache
  composer:
    image: example_php
    cap_drop: [all]
    working_dir: /var/www
    entrypoint: composer-1106.phar
    command: install --no-cache -o --ignore-platform-reqs
    volumes:
      - ./:/var/www
      - ./bin:/usr/local/sbin
  fpm_status:
    image: example_php
    cap_drop: [all]
    working_dir: /var/www
    entrypoint: php app/shell/fpm_status.php
    volumes:
      - ./:/var/www
    networks:
      - backend
    links:
      - php
  memcache_status:
    image: example_php
    cap_drop: [all]
    entrypoint: sh -c "echo 'stats' | nc memcache 11211"
    networks:
      - backend
    links:
      - memcache
  memcache_client:
    image: busybox
    cap_drop: [all]
    entrypoint: telnet
    command: memcache 11211
    networks:
      - backend
    links:
      - memcache
  psalm:
    image: example_php
    cap_drop: [all]
    working_dir: /var/www
    entrypoint: psalm-3114.phar --no-cache
    volumes:
      - ./:/var/www
      - ./bin:/usr/local/sbin
  phpcsfixer:
    image: example_php
    cap_drop: [all]
    working_dir: /var/www
    entrypoint: phpcsfixer-2163.phar fix --verbose --dry-run --diff --config phpcsfixer.conf
    volumes:
      - ./:/var/www
      - ./bin:/usr/local/sbin
  phpunit:
    image: example_php
    cap_drop: [all]
    working_dir: /var/www
    entrypoint: php -dextension=pcov.so /usr/local/sbin/phpunit-914.phar -c phpunit.xml --coverage-text --coverage-html=/var/coverage
    volumes:
      - coverage-data:/var/coverage
      - ./:/var/www
      - ./bin:/usr/local/sbin
    networks:
      - backend
    links:
      - nginx
      - php
      - mysql
      - memcache
  phploc:
    image: example_php
    cap_drop: [all]
    working_dir: /var/www
    entrypoint: phploc-602.phar app/ tests/
    volumes:
      - ./:/var/www
      - ./bin:/usr/local/sbin
  apib2swagger:
    image: kminami/apib2swagger
    cap_drop: [all]
    working_dir: /docs
    command: -i api.md --prefer-reference --bearer-apikey -o swaggerui/swagger.json
    volumes:
      - ./docs:/docs

networks:
  backend:
    driver: bridge
