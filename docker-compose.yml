version: "2.1"

services:
  php:
    build: ./docker/php80
    image: example_tasks_php
    cap_drop: [all]
    cap_add: [chown, setgid, setuid, kill]
    volumes:
      - ./tasks/src:/var/www/tasks/src
      - logs:/var/log/shared
    networks:
      - backend
    restart: unless-stopped
    stop_grace_period: 30s
    stop_signal: SIGQUIT
  logger:
    build: ./docker/php-log-tail
    image: example_tasks_logger
    volumes:
      - logs:/var/log/shared
  nginx:
    build: ./docker/nginx
    image: example_tasks_nginx
    cap_drop: [all]
    cap_add: [chown, setuid, setgid, dac_override, net_bind_service]
    ports:
      - "127.0.0.1:8080:8080"
    volumes:
      - coverage-data:/var/www/coverage
      - ./docs:/var/www/docs
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - backend
    restart: unless-stopped
  mysql:
    build: ./docker/mysql
    image: example_tasks_mysql
    cap_drop: [all]
    cap_add: [chown, setuid, setgid, dac_override]
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/mysql.conf:/etc/mysql/conf.d/mysql.cnf
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: tasks
    networks:
      - backend
    restart: unless-stopped
redis:
    image: redis:6.2-alpine
    # see https://raw.githubusercontent.com/redis/redis/6.2/redis.conf
    command: ["redis-server", "--appendonly", "yes", "--maxmemory", "128M"]
    cap_drop: [all]
    cap_add: [setuid, setgid]
    volumes:
      - redis-data:/data
    networks:
      - backend
  mailhog:
    build: docker/mailhog
    image: example_tasks_mailhog
    cap_drop: [all]
    ports:
      - "127.0.0.1:8025:8025"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  logs:
  mysql-data:
  redis-data:
  coverage-data: